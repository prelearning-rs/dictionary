[workspace]
members = [
    ".github/templates/library"
]
resolver = "2"

[workspace.package]
version = "0.0.0"

authors = []
edition = "2021"

[workspace.dependencies]
##############
# Dependencies
##############
# Logging & Error Management
tracing = "0.1.37"
tracing-subscriber = "0.3.16"
color-eyre = "0.6.2"
thiserror = "1.0.37"

##################
# Dev Dependencies
##################
# Benchmarking
criterion = "0.4.0"
# Testing Dependencies
arbtest = "0.2.0"
arbitrary = { version = "1.2.0", features = ["derive"] }
loom = "0.5.6"
ntest = "0.9.0"

################################################################################
## Dev Profile
################################################################################
[profile.dev]
# Enable basic optimizations for _our_ code. This additionally fixes some
# issues with LeakSanitizer not detecting memory leaks in unoptimized builds.
opt-level = 1

[profile.dev.package."*"]
# Fully optimize dependencies so that development performance is not bottlenecked
# by external factors.
opt-level = 3

################################################################################
## Release Profile
################################################################################
[profile.release]
# Enable link-time optimization, eliminates more code and inlines across crate boundaries.
lto = "fat"

# codegen-units of 1 gives best optimization, but disables parallel building.
# Default: 16
codegen-units = 4

# The default optimization level is 3 for release mode builds.
# 0 means disable optimization and is the default for debug mode buids.
# (Setting opt-level=1 for debug builds is a good way of speeding them up a bit.)
# "s" means optimize for size, "z" reduces size even more.
opt-level = 3

# Includes debug information in release builds. Necessary for profiling. Does not
# slow down the executable.
debug = true

# https://doc.rust-lang.org/rustc/codegen-options/index.html#strip
strip = "symbols"

name: test

on:
  pull_request:

jobs:
  test:
    name: ${{ matrix.os }} / ${{ matrix.toolchain }} / test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        toolchain: [stable]
        include:
          - os: ubuntu-latest
            toolchain: beta
          - os: ubuntu-latest
            toolchain: nightly
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install ${{ matrix.toolchain }}
        uses: prelearning-rs/actions/setup-rust@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.toolchain }}
      - name: Run cargo test --locked
        uses: prelearning-rs/actions/cargo@v1
        with:
          command: test --locked --all-features --all-targets
  os-check:
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os }} / stable
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Install stable
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
      - name: cargo generate-lockfile
        if: hashFiles('Cargo.lock') == ''
        uses: actions-rs/cargo@v1
        with:
          command: generate-lockfile
      - name: cargo test (w/o integrations)
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --locked --all-features --all-targets
  coverage:
    runs-on: ubuntu-latest
    name: ubuntu / stable / coverage
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Install stable
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: llvm-tools-preview
      - name: cargo install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      - name: cargo generate-lockfile
        if: hashFiles('Cargo.lock') == ''
        uses: actions-rs/cargo@v1
        with:
          command: generate-lockfile
      - name: cargo llvm-cov
        run: cargo llvm-cov --locked --all-features --lcov --output-path lcov.info
        env: # set this explicitly so integration tests will run
          FAKTORY_URL: tcp://127.0.0.1:7419
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v2
        with:
          fail_ci_if_error: true
    services:
      faktory:
        image: contribsys/faktory:latest
        ports:
          - 7419:7419
          - 7420:7420